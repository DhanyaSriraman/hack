{"ast":null,"code":"import _asyncToGenerator from\"D:/shna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\shna\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";// authService.js\nimport axios from'axios';var users=[{email:\"user1@example.com\",password:\"password1\"},{email:\"user2@example.com\",password:\"password2\"}];export var signUp=function signUp(email,password){var userExists=users.some(function(user){return user.email===email;});if(userExists){return{success:false,message:\"User already exists\"};}users.push({email:email,password:password});return{success:true,message:\"User registered successfully\"};};export var login=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post('https://p9v82c8s-8000.inc1.devtunnels.ms/v1/user/login',{username:email,password:password});case 3:response=_context.sent;console.log(response);console.log(response.status);if(!(response.status===200)){_context.next=12;break;}console.log(\"Hey\");console.log(response.data.user_id);return _context.abrupt(\"return\",{user_id:response.data.user_id,success:true,message:\"Login successful\"});case 12:return _context.abrupt(\"return\",{user_id:0,success:false,message:\"Invalid email or password\"});case 13:_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",{user_id:0,success:false,message:\"Invalid email or password\"});case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function login(_x,_x2){return _ref.apply(this,arguments);};}();// export const login = (email, password) => {\n//   const user = users.find((user) => user.email === email && user.password === password);\n//   if (user) {\n//     return { success: true, message: \"Login successful\" };\n//   }\n//   return { success: false, message: \"Invalid email or password\" };\n// };","map":{"version":3,"sources":["D:/shna/src/Components/authService.js"],"names":["axios","users","email","password","signUp","userExists","some","user","success","message","push","login","post","username","response","console","log","status","data","user_id"],"mappings":"mMAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,KAAK,CAAG,CACV,CAAEC,KAAK,CAAE,mBAAT,CAA8BC,QAAQ,CAAE,WAAxC,CADU,CAEV,CAAED,KAAK,CAAE,mBAAT,CAA8BC,QAAQ,CAAE,WAAxC,CAFU,CAAd,CAKE,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACF,KAAD,CAAQC,QAAR,CAAqB,CACzC,GAAME,CAAAA,UAAU,CAAGJ,KAAK,CAACK,IAAN,CAAW,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACL,KAAL,GAAeA,KAAzB,EAAX,CAAnB,CACA,GAAIG,UAAJ,CAAgB,CACd,MAAO,CAAEG,OAAO,CAAE,KAAX,CAAkBC,OAAO,CAAE,qBAA3B,CAAP,CACD,CACDR,KAAK,CAACS,IAAN,CAAW,CAAER,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAX,EACA,MAAO,CAAEK,OAAO,CAAE,IAAX,CAAiBC,OAAO,CAAE,8BAA1B,CAAP,CACD,CAPM,CASP,MAAO,IAAME,CAAAA,KAAK,0FAAG,iBAAOT,KAAP,CAAcC,QAAd,qKAEMH,CAAAA,KAAK,CAACY,IAAN,CAAW,wDAAX,CAAqE,CAC1FC,QAAQ,CAAEX,KADgF,CAE1FC,QAAQ,CAAEA,QAFgF,CAArE,CAFN,QAEXW,QAFW,eAMjBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAArB,EAPiB,KAQbH,QAAQ,CAACG,MAAT,GAAoB,GARP,2BASfF,OAAO,CAACC,GAAR,CAAY,KAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACI,IAAT,CAAcC,OAA1B,EAVe,gCAWR,CAAEA,OAAO,CAAGL,QAAQ,CAACI,IAAT,CAAcC,OAA1B,CAAkCX,OAAO,CAAE,IAA3C,CAAiDC,OAAO,CAAE,kBAA1D,CAXQ,0CAaR,CAAEU,OAAO,CAAE,CAAX,CAAaX,OAAO,CAAE,KAAtB,CAA6BC,OAAO,CAAE,2BAAtC,CAbQ,2HAgBV,CAAEU,OAAO,CAAC,CAAV,CAAYX,OAAO,CAAE,KAArB,CAA4BC,OAAO,CAAE,2BAArC,CAhBU,uEAAH,kBAALE,CAAAA,KAAK,gDAAX,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// authService.js\r\nimport axios from 'axios';\r\n\r\nconst users = [\r\n    { email: \"user1@example.com\", password: \"password1\" },\r\n    { email: \"user2@example.com\", password: \"password2\" },\r\n  ];\r\n  \r\n  export const signUp = (email, password) => {\r\n    const userExists = users.some((user) => user.email === email);\r\n    if (userExists) {\r\n      return { success: false, message: \"User already exists\" };\r\n    }\r\n    users.push({ email, password });\r\n    return { success: true, message: \"User registered successfully\" };\r\n  };\r\n  \r\n  export const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('https://p9v82c8s-8000.inc1.devtunnels.ms/v1/user/login', {\r\n        username: email,\r\n        password: password,\r\n      });\r\n      console.log(response)\r\n      console.log(response.status)\r\n      if (response.status === 200) {\r\n        console.log(\"Hey\")\r\n        console.log(response.data.user_id)\r\n        return { user_id : response.data.user_id,success: true, message: \"Login successful\" };\r\n      } else {\r\n        return { user_id :0,success: false, message: \"Invalid email or password\" };\r\n      }\r\n    } catch (error) {\r\n      return { user_id:0,success: false, message: \"Invalid email or password\" };\r\n    }\r\n  };\r\n  // export const login = (email, password) => {\r\n  //   const user = users.find((user) => user.email === email && user.password === password);\r\n  //   if (user) {\r\n  //     return { success: true, message: \"Login successful\" };\r\n  //   }\r\n  //   return { success: false, message: \"Invalid email or password\" };\r\n  // };\r\n  "]},"metadata":{},"sourceType":"module"}