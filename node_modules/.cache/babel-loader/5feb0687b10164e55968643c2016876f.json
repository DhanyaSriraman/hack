{"ast":null,"code":"import _asyncToGenerator from\"D:/shna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/shna/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\shna\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import Logo from\"../Assets/Logo.png\";import Logo4 from\"../Assets/Logo12.png\";import Declaration from\"../Assets/Declaration.png\";import{Route,Link}from\"react-router-dom\";import axios from'axios';import{format}from'date-fns';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var conversationsData={\"conversations\":[{\"conversation_id\":1,\"conversation_tag\":\"Fetch conversation History\",\"created_at\":100340243},{\"conversation_id\":2,\"conversation_tag\":\"second\",\"created_at\":100340245},{\"conversation_id\":3,\"conversation_tag\":\"third\",\"created_at\":100340289}]};function Sidebar(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),conversation=_useState2[0],setConversation=_useState2[1];var fetchConversation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log(\"In fetch prompts\");_context.next=4;return axios.get('https://p9v82c8s-8000.inc1.devtunnels.ms/v1/conv/2/history');case 4:response=_context.sent;setConversation(response.data.conversations);console.log(conversation);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error('Error fetching conversation:',_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function fetchConversation(){return _ref.apply(this,arguments);};}();//   let options = {\"Access-Control-Allow-Origin\": \"*\",'Accept':'*/*', \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS,DELETE,PUT\",\"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token\",'Access-Control-Allow-Credentials':true\n// ,crossorigin:true}\nuseEffect(function(){fetchConversation();},[]);console.log(conversation);// const handleConversationClick = async (conversationId) => {\n//   // Fetch new data when a conversation is clicked\n//   await fetchConversation();\n//   // Implement logic for handling conversation click\n//   console.log('Conversation clicked:', conversationId);\n// };\n// 127.0.0.1:8000/v1/conv/4/chat/history\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"bg-[#494949] w-[23vw] h-[100vh] text-white \",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col justify-between h-[80vh]\",children:[/*#__PURE__*/_jsx(\"img\",{src:Logo4,alt:\"Logo\",className:\"w-[17vw] h-[30vh] py-3 mx-auto\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col justify-center items-center\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/threads\",className:\"bg-[#333333] p-1.5 rounded-2xl w-60 my-2 text-base text-center relative\",style:{color:'#72A0C1'},onClick:function onClick(){return fetchConversation();},children:[\"New Chat\",/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-5 top-1/2 transform -translate-y-1/2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus})})]}),conversation.map(function(conv){return/*#__PURE__*/_jsxs(Link,{to:\"/app/threads/\".concat(conv.conversation_id),className:\"bg-[#333333] p-1.5 rounded-2xl w-60 my-2 text-base text-center\",onClick:function onClick(){return fetchConversation();},children:[/*#__PURE__*/_jsx(\"div\",{children:conv.conversation_tag}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#CCCCCC',fontSize:'12px'},children:format(new Date(conv.created_at),'dd/MM/yyyy hh:mm a')})]},conv.conversation_id);})]})]})});}export default Sidebar;","map":{"version":3,"sources":["D:/shna/src/Components/Sidebar.js"],"names":["React","useState","useEffect","Logo","Logo4","Declaration","Route","Link","axios","format","FontAwesomeIcon","faPlus","conversationsData","Sidebar","conversation","setConversation","fetchConversation","console","log","get","response","data","conversations","error","color","map","conv","conversation_id","conversation_tag","fontSize","Date","created_at"],"mappings":"gSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,sBAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,OAASC,KAAT,CAAgBC,IAAhB,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,MAAT,KAAuB,mCAAvB,C,wFAGA,GAAMC,CAAAA,iBAAiB,CAAG,CACxB,gBAAiB,CACf,CACE,kBAAmB,CADrB,CAEE,mBAAoB,4BAFtB,CAGE,aAAc,SAHhB,CADe,CAMf,CACE,kBAAmB,CADrB,CAEE,mBAAoB,QAFtB,CAGE,aAAc,SAHhB,CANe,CAWf,CACE,kBAAmB,CADrB,CAEE,mBAAoB,OAFtB,CAGE,aAAc,SAHhB,CAXe,CADO,CAA1B,CAmBA,QAASC,CAAAA,OAAT,EAAmB,CACjB,cAAwCZ,QAAQ,CAAC,EAAD,CAAhD,wCAAOa,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,iBAAiB,0FAAG,gKAEtBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAFsB,sBAGCV,CAAAA,KAAK,CAACW,GAAN,CAAU,4DAAV,CAHD,QAGhBC,QAHgB,eAItBL,eAAe,CAACK,QAAQ,CAACC,IAAT,CAAcC,aAAf,CAAf,CACAL,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EALsB,+EAOtBG,OAAO,CAACM,KAAR,CAAc,8BAAd,cAPsB,oEAAH,kBAAjBP,CAAAA,iBAAiB,0CAAvB,CAUF;AACA;AACEd,SAAS,CAAC,UAAM,CACdc,iBAAiB,GAClB,CAFQ,CAEN,EAFM,CAAT,CAGAC,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EAEA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA,mBACE,YAAK,SAAS,CAAC,6CAAf,uBACE,aAAK,SAAS,CAAC,wCAAf,wBACE,YAAK,GAAG,CAAEV,KAAV,CAAiB,GAAG,CAAC,MAArB,CAA4B,SAAS,CAAC,gCAAtC,EADF,cAEE,aAAK,SAAS,CAAC,2CAAf,wBACE,MAAC,IAAD,EAAM,EAAE,WAAR,CACE,SAAS,CAAC,yEADZ,CAEE,KAAK,CAAE,CAAEoB,KAAK,CAAE,SAAT,CAFT,CAE+B,OAAO,CAAE,yBAAMR,CAAAA,iBAAiB,EAAvB,EAFxC,mCAKE,YAAK,SAAS,CAAC,qDAAf,uBACE,KAAC,eAAD,EAAiB,IAAI,CAAEL,MAAvB,EADF,EALF,GADF,CAUGG,YAAY,CAACW,GAAb,CAAiB,SAACC,IAAD,qBAChB,MAAC,IAAD,EAAiC,EAAE,wBAAkBA,IAAI,CAACC,eAAvB,CAAnC,CAA6E,SAAS,CAAC,gEAAvF,CAAwJ,OAAO,CAAE,yBAAMX,CAAAA,iBAAiB,EAAvB,EAAjK,wBACE,qBAAMU,IAAI,CAACE,gBAAX,EADF,cAEE,YAAK,KAAK,CAAE,CAAEJ,KAAK,CAAE,SAAT,CAAoBK,QAAQ,CAAE,MAA9B,CAAZ,UAAqDpB,MAAM,CAAC,GAAIqB,CAAAA,IAAJ,CAASJ,IAAI,CAACK,UAAd,CAAD,CAA4B,oBAA5B,CAA3D,EAFF,GAAWL,IAAI,CAACC,eAAhB,CADgB,EAAjB,CAVH,GAFF,GADF,EADF,CAyBC,CAGD,cAAed,CAAAA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Logo from \"../Assets/Logo.png\";\r\nimport Logo4 from \"../Assets/Logo12.png\";\r\nimport Declaration from \"../Assets/Declaration.png\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst conversationsData = {\r\n  \"conversations\": [\r\n    {\r\n      \"conversation_id\": 1,\r\n      \"conversation_tag\": \"Fetch conversation History\",\r\n      \"created_at\": 100340243\r\n    },\r\n    {\r\n      \"conversation_id\": 2,\r\n      \"conversation_tag\": \"second\",\r\n      \"created_at\": 100340245\r\n    },\r\n    {\r\n      \"conversation_id\": 3,\r\n      \"conversation_tag\": \"third\",\r\n      \"created_at\": 100340289\r\n    }\r\n  ]\r\n};\r\nfunction Sidebar() {\r\n  const [conversation, setConversation] = useState([]);\r\n  const fetchConversation = async () => {\r\n    try {\r\n      console.log(\"In fetch prompts\")\r\n      const response = await axios.get('https://p9v82c8s-8000.inc1.devtunnels.ms/v1/conv/2/history');\r\n      setConversation(response.data.conversations);\r\n      console.log(conversation)\r\n    } catch (error) {\r\n      console.error('Error fetching conversation:', error);\r\n    }\r\n  };\r\n//   let options = {\"Access-Control-Allow-Origin\": \"*\",'Accept':'*/*', \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS,DELETE,PUT\",\"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token\",'Access-Control-Allow-Credentials':true\r\n// ,crossorigin:true}\r\n  useEffect(() => {\r\n    fetchConversation();\r\n  }, []);\r\n  console.log(conversation)\r\n  \r\n  // const handleConversationClick = async (conversationId) => {\r\n  //   // Fetch new data when a conversation is clicked\r\n  //   await fetchConversation();\r\n  //   // Implement logic for handling conversation click\r\n  //   console.log('Conversation clicked:', conversationId);\r\n  // };\r\n// 127.0.0.1:8000/v1/conv/4/chat/history\r\n\r\nreturn (\r\n  <div className=\"bg-[#494949] w-[23vw] h-[100vh] text-white \">\r\n    <div className=\"flex flex-col justify-between h-[80vh]\">\r\n      <img src={Logo4} alt=\"Logo\" className=\"w-[17vw] h-[30vh] py-3 mx-auto\" />\r\n      <div className=\"flex flex-col justify-center items-center\">\r\n        <Link to={`/threads`}\r\n          className=\"bg-[#333333] p-1.5 rounded-2xl w-60 my-2 text-base text-center relative\"\r\n          style={{ color: '#72A0C1' }} onClick={() => fetchConversation()}\r\n        >\r\n          New Chat\r\n          <div className=\"absolute right-5 top-1/2 transform -translate-y-1/2\">\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </div>\r\n        </Link>\r\n        {conversation.map((conv) => (\r\n          <Link key={conv.conversation_id} to={`/app/threads/${conv.conversation_id}`} className=\"bg-[#333333] p-1.5 rounded-2xl w-60 my-2 text-base text-center\" onClick={() => fetchConversation()}>\r\n            <div>{conv.conversation_tag}</div>\r\n            <div style={{ color: '#CCCCCC', fontSize: '12px' }}>{format(new Date(conv.created_at), 'dd/MM/yyyy hh:mm a')}</div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}