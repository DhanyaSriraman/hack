{"ast":null,"code":"import _slicedToArray from\"D:/shna/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import SpeechRecognition,{useSpeechRecognition}from\"react-speech-recognition\";import Mic from\"../Assets/mic.svg\";import OnMic from\"../Assets/micon.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";var Dictaphone=function Dictaphone(_ref){var input=_ref.input,setinput=_ref.setinput,language=_ref.language,setLanguage=_ref.setLanguage;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),mic=_useState2[0],setMic=_useState2[1];var _useState3=useState(\"en\"),_useState4=_slicedToArray(_useState3,2),selectedLanguage=_useState4[0],setSelectedLanguage=_useState4[1];// Default language\nvar _useSpeechRecognition=useSpeechRecognition(),transcript=_useSpeechRecognition.transcript,listening=_useSpeechRecognition.listening,resetTranscript=_useSpeechRecognition.resetTranscript,browserSupportsSpeechRecognition=_useSpeechRecognition.browserSupportsSpeechRecognition;if(!browserSupportsSpeechRecognition){return alert(\"Browser doesn't support speech recognition\");}var onMicStart=function onMicStart(){setMic(!mic);if(!mic){SpeechRecognition.startListening({language:selectedLanguage});}else{SpeechRecognition.stopListening();setinput(transcript);// Set the input state to the transcript\n}};var handleLanguageChange=function handleLanguageChange(e){setSelectedLanguage(e.target.value);setLanguage(e.target.value);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:listening?OnMic:Mic,alt:\"Mic\",className:\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\",onClick:onMicStart})});};export default Dictaphone;// import React, { useState } from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import Mic from \"../Assets/mic.svg\";\n// import OnMic from \"../Assets/micon.svg\";\n// var lang=\"en\"\n// const Dictaphone = ({ input, setinput }) => {\n//   const [mic, setMic] = useState(false);\n//   const {\n//     transcript,\n//     listening,\n//     resetTranscript,\n//     browserSupportsSpeechRecognition,\n//   } = useSpeechRecognition();\n//   if (!browserSupportsSpeechRecognition) {\n//     return alert(\"Browser doesn't support speech recognition\");\n//   }\n//   const onMicStart = () => {\n//     setMic(!mic);\n//     mic\n//       ? SpeechRecognition.startListening({language:lang})\n//       : SpeechRecognition.stopListening();\n//     console.log(transcript);\n//     if(transcript==\"Tamil\" || transcript==\"तमिल\"){\n//       lang=\"ta-IN\"\n//     }\n//     if (transcript==\"இங்கிலீஷ்\" || transcript==\"अंग्रेज़ी\" || transcript==\"इंग्लिश\"){\n//       lang=\"en\"\n//     }\n//     if(transcript==\"Hindi\" || transcript==\"ஹிந்தி\")\n//     {\n//       lang=\"hi-IN\"\n//     }\n//     setinput(transcript);\n//   };\n//   return (\n//     <div>\n//       <img\n//         src={listening ? OnMic : Mic}\n//         alt=\"Mic\"\n//         className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\n//         onClick={onMicStart}\n//       />\n//     </div>\n//   );\n// };\n// export default Dictaphone;","map":{"version":3,"sources":["D:/shna/src/Components/Dictaphone.js"],"names":["React","useState","SpeechRecognition","useSpeechRecognition","Mic","OnMic","Dictaphone","input","setinput","language","setLanguage","mic","setMic","selectedLanguage","setSelectedLanguage","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","alert","onMicStart","startListening","stopListening","handleLanguageChange","e","target","value"],"mappings":"6FAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,iBAAP,EACEC,oBADF,KAEO,0BAFP,CAGA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA+C,IAA5CC,CAAAA,KAA4C,MAA5CA,KAA4C,CAArCC,QAAqC,MAArCA,QAAqC,CAA3BC,QAA2B,MAA3BA,QAA2B,CAAlBC,WAAkB,MAAlBA,WAAkB,CAChE,cAAsBT,QAAQ,CAAC,KAAD,CAA9B,wCAAOU,GAAP,eAAYC,MAAZ,eACA,eAAgDX,QAAQ,CAAC,IAAD,CAAxD,yCAAOY,gBAAP,eAAyBC,mBAAzB,eAAgE;AAEhE,0BAKIX,oBAAoB,EALxB,CACEY,UADF,uBACEA,UADF,CAEEC,SAFF,uBAEEA,SAFF,CAGEC,eAHF,uBAGEA,eAHF,CAIEC,gCAJF,uBAIEA,gCAJF,CAOA,GAAI,CAACA,gCAAL,CAAuC,CACrC,MAAOC,CAAAA,KAAK,CAAC,4CAAD,CAAZ,CACD,CAED,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBR,MAAM,CAAC,CAACD,GAAF,CAAN,CACA,GAAI,CAACA,GAAL,CAAU,CACRT,iBAAiB,CAACmB,cAAlB,CAAiC,CAAEZ,QAAQ,CAAEI,gBAAZ,CAAjC,EACD,CAFD,IAEO,CACLX,iBAAiB,CAACoB,aAAlB,GACAd,QAAQ,CAACO,UAAD,CAAR,CAAsB;AACvB,CACF,CARD,CAWA,GAAMQ,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,CAAD,CAAO,CAClCV,mBAAmB,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB,CACAhB,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CAHD,CAKA,mBACE,kCACE,YACE,GAAG,CAAEV,SAAS,CAAGX,KAAH,CAAWD,GAD3B,CAEE,GAAG,CAAC,KAFN,CAGE,SAAS,CAAC,4EAHZ,CAIE,OAAO,CAAEgB,UAJX,EADF,EADF,CAUD,CAzCD,CA2CA,cAAed,CAAAA,UAAf,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport Mic from \"../Assets/mic.svg\";\r\nimport OnMic from \"../Assets/micon.svg\";\r\n\r\nconst Dictaphone = ({ input, setinput, language,setLanguage }) => {\r\n  const [mic, setMic] = useState(false);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"en\"); // Default language\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return alert(\"Browser doesn't support speech recognition\");\r\n  }\r\n\r\n  const onMicStart = () => {\r\n    setMic(!mic);\r\n    if (!mic) {\r\n      SpeechRecognition.startListening({ language: selectedLanguage });\r\n    } else {\r\n      SpeechRecognition.stopListening();\r\n      setinput(transcript); // Set the input state to the transcript\r\n    }\r\n  };\r\n  \r\n\r\n  const handleLanguageChange = (e) => {\r\n    setSelectedLanguage(e.target.value);\r\n    setLanguage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={listening ? OnMic : Mic}\r\n        alt=\"Mic\"\r\n        className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\r\n        onClick={onMicStart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dictaphone;\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// import SpeechRecognition, {\r\n//   useSpeechRecognition,\r\n// } from \"react-speech-recognition\";\r\n// import Mic from \"../Assets/mic.svg\";\r\n// import OnMic from \"../Assets/micon.svg\";\r\n// var lang=\"en\"\r\n// const Dictaphone = ({ input, setinput }) => {\r\n//   const [mic, setMic] = useState(false);\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return alert(\"Browser doesn't support speech recognition\");\r\n//   }\r\n//   const onMicStart = () => {\r\n//     setMic(!mic);\r\n//     mic\r\n//       ? SpeechRecognition.startListening({language:lang})\r\n//       : SpeechRecognition.stopListening();\r\n//     console.log(transcript);\r\n//     if(transcript==\"Tamil\" || transcript==\"तमिल\"){\r\n//       lang=\"ta-IN\"\r\n//     }\r\n//     if (transcript==\"இங்கிலீஷ்\" || transcript==\"अंग्रेज़ी\" || transcript==\"इंग्लिश\"){\r\n//       lang=\"en\"\r\n//     }\r\n//     if(transcript==\"Hindi\" || transcript==\"ஹிந்தி\")\r\n//     {\r\n//       lang=\"hi-IN\"\r\n//     }\r\n//     setinput(transcript);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <img\r\n//         src={listening ? OnMic : Mic}\r\n//         alt=\"Mic\"\r\n//         className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\r\n//         onClick={onMicStart}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Dictaphone;\r\n"]},"metadata":{},"sourceType":"module"}