{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivahari.as\\\\OneDrive - Kaleris Corporation\\\\Desktop\\\\hack\\\\src\\\\Components\\\\Dictaphone.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport Mic from \"../Assets/mic.svg\";\nimport OnMic from \"../Assets/micon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dictaphone = ({\n  input,\n  setinput,\n  language,\n  setLanguage\n}) => {\n  _s();\n  const [mic, setMic] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(\"en\"); // Default language\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return alert(\"Browser doesn't support speech recognition\");\n  }\n  const onMicStart = () => {\n    setMic(!mic);\n    if (!mic) {\n      SpeechRecognition.startListening({\n        language: selectedLanguage\n      });\n    } else {\n      SpeechRecognition.stopListening();\n      setinput(transcript); // Set the input state to the transcript\n    }\n  };\n  const handleLanguageChange = e => {\n    setSelectedLanguage(e.target.value);\n    setLanguage(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: listening ? OnMic : Mic,\n      alt: \"Mic\",\n      className: \"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\",\n      onClick: onMicStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Dictaphone, \"2ZGiJpkmthf0IRgJem65vzSJuTI=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Dictaphone;\nexport default Dictaphone;\n\n// import React, { useState } from \"react\";\n\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import Mic from \"../Assets/mic.svg\";\n// import OnMic from \"../Assets/micon.svg\";\n// var lang=\"en\"\n// const Dictaphone = ({ input, setinput }) => {\n//   const [mic, setMic] = useState(false);\n//   const {\n//     transcript,\n//     listening,\n//     resetTranscript,\n//     browserSupportsSpeechRecognition,\n//   } = useSpeechRecognition();\n\n//   if (!browserSupportsSpeechRecognition) {\n//     return alert(\"Browser doesn't support speech recognition\");\n//   }\n//   const onMicStart = () => {\n//     setMic(!mic);\n//     mic\n//       ? SpeechRecognition.startListening({language:lang})\n//       : SpeechRecognition.stopListening();\n//     console.log(transcript);\n//     if(transcript==\"Tamil\" || transcript==\"तमिल\"){\n//       lang=\"ta-IN\"\n//     }\n//     if (transcript==\"இங்கிலீஷ்\" || transcript==\"अंग्रेज़ी\" || transcript==\"इंग्लिश\"){\n//       lang=\"en\"\n//     }\n//     if(transcript==\"Hindi\" || transcript==\"ஹிந்தி\")\n//     {\n//       lang=\"hi-IN\"\n//     }\n//     setinput(transcript);\n//   };\n\n//   return (\n//     <div>\n//       <img\n//         src={listening ? OnMic : Mic}\n//         alt=\"Mic\"\n//         className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\n//         onClick={onMicStart}\n//       />\n//     </div>\n//   );\n// };\n// export default Dictaphone;\nvar _c;\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","Mic","OnMic","jsxDEV","_jsxDEV","Dictaphone","input","setinput","language","setLanguage","_s","mic","setMic","selectedLanguage","setSelectedLanguage","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","alert","onMicStart","startListening","stopListening","handleLanguageChange","e","target","value","children","src","alt","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sivahari.as/OneDrive - Kaleris Corporation/Desktop/hack/src/Components/Dictaphone.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport Mic from \"../Assets/mic.svg\";\r\nimport OnMic from \"../Assets/micon.svg\";\r\n\r\nconst Dictaphone = ({ input, setinput, language,setLanguage }) => {\r\n  const [mic, setMic] = useState(false);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"en\"); // Default language\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return alert(\"Browser doesn't support speech recognition\");\r\n  }\r\n\r\n  const onMicStart = () => {\r\n    setMic(!mic);\r\n    if (!mic) {\r\n      SpeechRecognition.startListening({ language: selectedLanguage });\r\n    } else {\r\n      SpeechRecognition.stopListening();\r\n      setinput(transcript); // Set the input state to the transcript\r\n    }\r\n  };\r\n  \r\n\r\n  const handleLanguageChange = (e) => {\r\n    setSelectedLanguage(e.target.value);\r\n    setLanguage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={listening ? OnMic : Mic}\r\n        alt=\"Mic\"\r\n        className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\r\n        onClick={onMicStart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dictaphone;\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// import SpeechRecognition, {\r\n//   useSpeechRecognition,\r\n// } from \"react-speech-recognition\";\r\n// import Mic from \"../Assets/mic.svg\";\r\n// import OnMic from \"../Assets/micon.svg\";\r\n// var lang=\"en\"\r\n// const Dictaphone = ({ input, setinput }) => {\r\n//   const [mic, setMic] = useState(false);\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return alert(\"Browser doesn't support speech recognition\");\r\n//   }\r\n//   const onMicStart = () => {\r\n//     setMic(!mic);\r\n//     mic\r\n//       ? SpeechRecognition.startListening({language:lang})\r\n//       : SpeechRecognition.stopListening();\r\n//     console.log(transcript);\r\n//     if(transcript==\"Tamil\" || transcript==\"तमिल\"){\r\n//       lang=\"ta-IN\"\r\n//     }\r\n//     if (transcript==\"இங்கிலீஷ்\" || transcript==\"अंग्रेज़ी\" || transcript==\"इंग्लिश\"){\r\n//       lang=\"en\"\r\n//     }\r\n//     if(transcript==\"Hindi\" || transcript==\"ஹிந்தி\")\r\n//     {\r\n//       lang=\"hi-IN\"\r\n//     }\r\n//     setinput(transcript);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <img\r\n//         src={listening ? OnMic : Mic}\r\n//         alt=\"Mic\"\r\n//         className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\r\n//         onClick={onMicStart}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Dictaphone;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,IACtBC,oBAAoB,QACf,0BAA0B;AACjC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,QAAQ;EAACC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhE,MAAM;IACJiB,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGlB,oBAAoB,CAAC,CAAC;EAE1B,IAAI,CAACkB,gCAAgC,EAAE;IACrC,OAAOC,KAAK,CAAC,4CAA4C,CAAC;EAC5D;EAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBR,MAAM,CAAC,CAACD,GAAG,CAAC;IACZ,IAAI,CAACA,GAAG,EAAE;MACRZ,iBAAiB,CAACsB,cAAc,CAAC;QAAEb,QAAQ,EAAEK;MAAiB,CAAC,CAAC;IAClE,CAAC,MAAM;MACLd,iBAAiB,CAACuB,aAAa,CAAC,CAAC;MACjCf,QAAQ,CAACQ,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAGD,MAAMQ,oBAAoB,GAAIC,CAAC,IAAK;IAClCV,mBAAmB,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACnCjB,WAAW,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,eACEvB,OAAA;MACEwB,GAAG,EAAEZ,SAAS,GAAGd,KAAK,GAAGD,GAAI;MAC7B4B,GAAG,EAAC,KAAK;MACTC,SAAS,EAAC,4EAA4E;MACtFC,OAAO,EAAEX;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAzCIL,UAAU;EAAA,QASVL,oBAAoB;AAAA;AAAAoC,EAAA,GATpB/B,UAAU;AA2ChB,eAAeA,UAAU;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}