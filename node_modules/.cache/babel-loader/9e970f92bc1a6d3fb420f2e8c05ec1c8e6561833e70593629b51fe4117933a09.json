{"ast":null,"code":"// authService.js\nimport axios from 'axios';\nconst users = [{\n  email: \"user1@example.com\",\n  password: \"password1\"\n}, {\n  email: \"user2@example.com\",\n  password: \"password2\"\n}];\nexport const signUp = (email, password) => {\n  const userExists = users.some(user => user.email === email);\n  if (userExists) {\n    return {\n      success: false,\n      message: \"User already exists\"\n    };\n  }\n  users.push({\n    email,\n    password\n  });\n  return {\n    success: true,\n    message: \"User registered successfully\"\n  };\n};\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post('http://127.0.0.1:8000/v1/user/login', {\n      username: email,\n      password: password\n    });\n    console.log(response);\n    console.log(response.status);\n    if (response.status === 200) {\n      console.log(\"Hey\");\n      console.log(response.data.user_id);\n      return {\n        user_id: response.data.user_id,\n        success: true,\n        message: \"Login successful\"\n      };\n    } else {\n      return {\n        user_id: 0,\n        success: false,\n        message: \"Invalid email or password\"\n      };\n    }\n  } catch (error) {\n    return {\n      user_id: 0,\n      success: false,\n      message: \"Invalid email or password\"\n    };\n  }\n};\n// export const login = (email, password) => {\n//   const user = users.find((user) => user.email === email && user.password === password);\n//   if (user) {\n//     return { success: true, message: \"Login successful\" };\n//   }\n//   return { success: false, message: \"Invalid email or password\" };\n// };","map":{"version":3,"names":["axios","users","email","password","signUp","userExists","some","user","success","message","push","login","response","post","username","console","log","status","data","user_id","error"],"sources":["C:/Users/sivahari.as/OneDrive - Kaleris Corporation/Desktop/matsya_frontend/hack/src/Components/authService.js"],"sourcesContent":["// authService.js\r\nimport axios from 'axios';\r\n\r\nconst users = [\r\n    { email: \"user1@example.com\", password: \"password1\" },\r\n    { email: \"user2@example.com\", password: \"password2\" },\r\n  ];\r\n  \r\n  export const signUp = (email, password) => {\r\n    const userExists = users.some((user) => user.email === email);\r\n    if (userExists) {\r\n      return { success: false, message: \"User already exists\" };\r\n    }\r\n    users.push({ email, password });\r\n    return { success: true, message: \"User registered successfully\" };\r\n  };\r\n  \r\n  export const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/v1/user/login', {\r\n        username: email,\r\n        password: password,\r\n      });\r\n      console.log(response)\r\n      console.log(response.status)\r\n      if (response.status === 200) {\r\n        console.log(\"Hey\")\r\n        console.log(response.data.user_id)\r\n        return { user_id : response.data.user_id,success: true, message: \"Login successful\" };\r\n      } else {\r\n        return { user_id :0,success: false, message: \"Invalid email or password\" };\r\n      }\r\n    } catch (error) {\r\n      return { user_id:0,success: false, message: \"Invalid email or password\" };\r\n    }\r\n  };\r\n  // export const login = (email, password) => {\r\n  //   const user = users.find((user) => user.email === email && user.password === password);\r\n  //   if (user) {\r\n  //     return { success: true, message: \"Login successful\" };\r\n  //   }\r\n  //   return { success: false, message: \"Invalid email or password\" };\r\n  // };\r\n  "],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAG,CACV;EAAEC,KAAK,EAAE,mBAAmB;EAAEC,QAAQ,EAAE;AAAY,CAAC,EACrD;EAAED,KAAK,EAAE,mBAAmB;EAAEC,QAAQ,EAAE;AAAY,CAAC,CACtD;AAED,OAAO,MAAMC,MAAM,GAAGA,CAACF,KAAK,EAAEC,QAAQ,KAAK;EACzC,MAAME,UAAU,GAAGJ,KAAK,CAACK,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,KAAK,KAAKA,KAAK,CAAC;EAC7D,IAAIG,UAAU,EAAE;IACd,OAAO;MAAEG,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAsB,CAAC;EAC3D;EACAR,KAAK,CAACS,IAAI,CAAC;IAAER,KAAK;IAAEC;EAAS,CAAC,CAAC;EAC/B,OAAO;IAAEK,OAAO,EAAE,IAAI;IAAEC,OAAO,EAAE;EAA+B,CAAC;AACnE,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAOT,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,qCAAqC,EAAE;MACvEC,QAAQ,EAAEZ,KAAK;MACfC,QAAQ,EAAEA;IACZ,CAAC,CAAC;IACFY,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,MAAM,CAAC;IAC5B,IAAIL,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MAC3BF,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClBD,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC;MAClC,OAAO;QAAEA,OAAO,EAAGP,QAAQ,CAACM,IAAI,CAACC,OAAO;QAACX,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAmB,CAAC;IACvF,CAAC,MAAM;MACL,OAAO;QAAEU,OAAO,EAAE,CAAC;QAACX,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA4B,CAAC;IAC5E;EACF,CAAC,CAAC,OAAOW,KAAK,EAAE;IACd,OAAO;MAAED,OAAO,EAAC,CAAC;MAACX,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAA4B,CAAC;EAC3E;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}