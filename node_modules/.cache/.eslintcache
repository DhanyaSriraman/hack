[{"D:\\shna\\src\\index.js":"1","D:\\shna\\src\\App.js":"2","D:\\shna\\src\\reportWebVitals.js":"3","D:\\shna\\src\\Components\\Sidebar.js":"4","D:\\shna\\src\\Components\\Threads.js":"5","D:\\shna\\src\\Components\\Response.js":"6","D:\\shna\\src\\Components\\Input.js":"7","D:\\shna\\src\\Components\\Dictaphone.js":"8","D:\\shna\\src\\Components\\Home.js":"9","D:\\shna\\src\\Components\\authService.js":"10","D:\\shna\\src\\Components\\Sidebar1.js":"11","D:\\shna\\src\\Components\\MainLayout.js":"12"},{"size":552,"mtime":1707848734556,"results":"13","hashOfConfig":"14"},{"size":883,"mtime":1716716257661,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1707848734556,"results":"16","hashOfConfig":"14"},{"size":3257,"mtime":1716710402598,"results":"17","hashOfConfig":"14"},{"size":10333,"mtime":1716718093881,"results":"18","hashOfConfig":"14"},{"size":23756,"mtime":1716486302265,"results":"19","hashOfConfig":"14"},{"size":313,"mtime":1715876251259,"results":"20","hashOfConfig":"14"},{"size":2926,"mtime":1716570689897,"results":"21","hashOfConfig":"14"},{"size":3916,"mtime":1716716138765,"results":"22","hashOfConfig":"14"},{"size":1582,"mtime":1716709170064,"results":"23","hashOfConfig":"14"},{"size":1162,"mtime":1716450411589,"results":"24","hashOfConfig":"14"},{"size":367,"mtime":1716704908466,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eoc34i",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\shna\\src\\index.js",[],[],"D:\\shna\\src\\App.js",[],[],"D:\\shna\\src\\reportWebVitals.js",[],[],"D:\\shna\\src\\Components\\Sidebar.js",["66","67","68","69","70","71"],[],"import React, { useState, useEffect } from 'react';\r\nimport Logo from \"../Assets/Logo.png\";\r\nimport Logo4 from \"../Assets/Logo12.png\";\r\nimport Declaration from \"../Assets/Declaration.png\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst conversationsData = {\r\n  \"conversations\": [\r\n    {\r\n      \"conversation_id\": 1,\r\n      \"conversation_tag\": \"Fetch conversation History\",\r\n      \"created_at\": 100340243\r\n    },\r\n    {\r\n      \"conversation_id\": 2,\r\n      \"conversation_tag\": \"second\",\r\n      \"created_at\": 100340245\r\n    },\r\n    {\r\n      \"conversation_id\": 3,\r\n      \"conversation_tag\": \"third\",\r\n      \"created_at\": 100340289\r\n    }\r\n  ]\r\n};\r\nfunction Sidebar() {\r\n  const [conversation, setConversation] = useState([]);\r\n  const fetchConversation = async () => {\r\n    try {\r\n      console.log(\"In fetch prompts\")\r\n      const newTimestamp = new Date().toISOString();\r\n      const response = await axios.get('https://p9v82c8s-8000.inc1.devtunnels.ms/v1/conv/2/history');\r\n      setConversation(response.data.conversations);\r\n      console.log(conversation)\r\n    } catch (error) {\r\n      console.error('Error fetching conversation:', error);\r\n    }\r\n  };\r\n//   let options = {\"Access-Control-Allow-Origin\": \"*\",'Accept':'*/*', \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS,DELETE,PUT\",\"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token\",'Access-Control-Allow-Credentials':true\r\n// ,crossorigin:true}\r\n  useEffect(() => {\r\n    fetchConversation();\r\n  }, []);\r\n  console.log(conversation)\r\n  \r\n  // const handleConversationClick = async (conversationId) => {\r\n  //   // Fetch new data when a conversation is clicked\r\n  //   await fetchConversation();\r\n  //   // Implement logic for handling conversation click\r\n  //   console.log('Conversation clicked:', conversationId);\r\n  // };\r\n// 127.0.0.1:8000/v1/conv/4/chat/history\r\n\r\nreturn (\r\n  <div className=\"bg-[#494949] w-[23vw] h-[100vh] text-white \">\r\n    <div className=\"flex flex-col justify-between h-[80vh]\">\r\n      <img src={Logo4} alt=\"Logo\" className=\"w-[17vw] h-[30vh] py-3 mx-auto\" />\r\n      <div className=\"flex flex-col justify-center items-center\">\r\n        <Link to={`/app/threads`}\r\n          className=\"bg-[#333333] p-1.5 rounded-2xl w-60 my-2 text-base text-center relative\"\r\n          style={{ color: '#72A0C1' }} onClick={() => fetchConversation()}\r\n        >\r\n          New Chat\r\n          <div className=\"absolute right-5 top-1/2 transform -translate-y-1/2\">\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </div>\r\n        </Link>\r\n        {conversation.map((conv) => (\r\n          <Link key={conv.conversation_id} to={`/app/threads/${conv.conversation_id}`} className=\"bg-[#333333] p-1.5 rounded-2xl w-60 my-2 text-base text-center\" onClick={() => fetchConversation()}>\r\n            <div>{conv.conversation_tag}</div>\r\n            <div style={{ color: '#CCCCCC', fontSize: '12px' }}>{format(new Date(conv.created_at), 'dd/MM/yyyy hh:mm a')}</div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\n\r\nexport default Sidebar;\r\n","D:\\shna\\src\\Components\\Threads.js",["72","73","74","75","76","77","78","79"],[],"D:\\shna\\src\\Components\\Response.js",[],[],"D:\\shna\\src\\Components\\Input.js",[],[],"D:\\shna\\src\\Components\\Dictaphone.js",["80","81"],[],"import React, { useState } from \"react\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport Mic from \"../Assets/mic.svg\";\r\nimport OnMic from \"../Assets/micon.svg\";\r\n\r\nconst Dictaphone = ({ input, setinput, language,setLanguage }) => {\r\n  const [mic, setMic] = useState(false);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"en\"); // Default language\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return alert(\"Browser doesn't support speech recognition\");\r\n  }\r\n\r\n  const onMicStart = () => {\r\n    setMic(!mic);\r\n    if (!mic) {\r\n      SpeechRecognition.startListening({ language: selectedLanguage });\r\n    } else {\r\n      SpeechRecognition.stopListening();\r\n      setinput(transcript); // Set the input state to the transcript\r\n    }\r\n  };\r\n  \r\n\r\n  const handleLanguageChange = (e) => {\r\n    setSelectedLanguage(e.target.value);\r\n    setLanguage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={listening ? OnMic : Mic}\r\n        alt=\"Mic\"\r\n        className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\r\n        onClick={onMicStart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dictaphone;\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// import SpeechRecognition, {\r\n//   useSpeechRecognition,\r\n// } from \"react-speech-recognition\";\r\n// import Mic from \"../Assets/mic.svg\";\r\n// import OnMic from \"../Assets/micon.svg\";\r\n// var lang=\"en\"\r\n// const Dictaphone = ({ input, setinput }) => {\r\n//   const [mic, setMic] = useState(false);\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return alert(\"Browser doesn't support speech recognition\");\r\n//   }\r\n//   const onMicStart = () => {\r\n//     setMic(!mic);\r\n//     mic\r\n//       ? SpeechRecognition.startListening({language:lang})\r\n//       : SpeechRecognition.stopListening();\r\n//     console.log(transcript);\r\n//     if(transcript==\"Tamil\" || transcript==\"तमिल\"){\r\n//       lang=\"ta-IN\"\r\n//     }\r\n//     if (transcript==\"இங்கிலீஷ்\" || transcript==\"अंग्रेज़ी\" || transcript==\"इंग्लिश\"){\r\n//       lang=\"en\"\r\n//     }\r\n//     if(transcript==\"Hindi\" || transcript==\"ஹிந்தி\")\r\n//     {\r\n//       lang=\"hi-IN\"\r\n//     }\r\n//     setinput(transcript);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <img\r\n//         src={listening ? OnMic : Mic}\r\n//         alt=\"Mic\"\r\n//         className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\r\n//         onClick={onMicStart}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Dictaphone;\r\n","D:\\shna\\src\\Components\\Home.js",["82","83"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate hook\r\nimport { signUp, login } from \"./authService\"; // Import the authentication service\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Home = () => {\r\n  const [isSignUp, setIsSignUp] = useState(true); // Toggle between sign-up and login\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const navigate = useNavigate(); // Initialize navigate function\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isSignUp) {\r\n      const { success, message } = signUp(form.email, form.password);\r\n      setMessage(message);\r\n      if (success) {\r\n        setIsSignUp(false); // Switch to login form after successful sign-up\r\n      }\r\n    } else {\r\n      const { user_id,success, message } = await login(form.email, form.password); // Use await to handle the asynchronous login function\r\n      setMessage(message);\r\n      if (success) {\r\n        setLoggedIn(true); // Set loggedIn to true\r\n        console.log(user_id,\"Printing user id in Home\")\r\n        navigate(`/app/threads/user/${user_id}`); // Navigate to /app/threads route on successful login\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsSignUp(!isSignUp);\r\n    setMessage(\"\"); // Clear any previous messages\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#A9BA9D] w-[100vw] h-[100vh] flex items-center justify-center\">\r\n      {/* {loggedIn && <Sidebar />}  */}\r\n      <div className=\"bg-[#BDD1BD] p-8 rounded shadow-md w-96\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center\">\r\n          {isSignUp ? \"Sign Up\" : \"Login\"}\r\n        </h2>\r\n        {message && (\r\n          <p className={`mb-4 ${message.includes(\"success\") ? \"text-green-500\" : \"text-red-500\"}`}>\r\n            {message}\r\n          </p>\r\n        )}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n              Username\r\n            </label>\r\n            <input\r\n              type=\"string\"\r\n              name=\"email\"\r\n              value={form.email}\r\n              onChange={handleInputChange}\r\n              required\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={form.password}\r\n              onChange={handleInputChange}\r\n              required\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-10 rounded focus:outline-none focus:shadow-outline\"\r\n            >\r\n              {isSignUp ? \"Sign Up\" : \"Login\"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={toggleForm}\r\n              className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800 ml-2\"\r\n            >\r\n              {isSignUp ? \"Already have an account? Login\" : \"Need an account? Sign Up\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\shna\\src\\Components\\authService.js",[],[],"D:\\shna\\src\\Components\\Sidebar1.js",["84","85","86","87","88","89","90","91","92","93"],[],"import React, { useState, useEffect } from 'react';\r\nimport Logo from \"../Assets/Logo.png\";\r\nimport Logo4 from \"../Assets/Logo12.png\";\r\nimport Declaration from \"../Assets/Declaration.png\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"bg-[#494949] w-[23vw] h-[100vh] text-white \">\r\n    <div className=\"flex flex-col justify-between h-[80vh]\">\r\n      <img src={Logo4} alt=\"Logo\" className=\"w-[17vw] h-[30vh] py-3 mx-auto\" />\r\n      <div className=\"flex flex-col justify-center items-center\">\r\n          {/* <button className=\"bg-[#333333] rounded-2xl p-2 w-32 my-3 text-lg\">\r\n            Threads\r\n          </button>\r\n\r\n          <button className=\"bg-[#333333] rounded-2xl p-2 w-32 m-3 text-lg\">\r\n            About Us\r\n          </button> */}\r\n        </div>\r\n        {/* <img src={Declaration} alt=\"Declaration\" className=\"w-[15vw] mx-auto\" /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","D:\\shna\\src\\Components\\MainLayout.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":19},{"ruleId":"94","severity":1,"message":"99","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":15},{"ruleId":"94","severity":1,"message":"100","line":12,"column":7,"nodeType":"96","messageId":"97","endLine":12,"endColumn":24},{"ruleId":"94","severity":1,"message":"101","line":36,"column":13,"nodeType":"96","messageId":"97","endLine":36,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":48,"column":6,"nodeType":"104","endLine":48,"endColumn":8,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"106","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":16},{"ruleId":"94","severity":1,"message":"107","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":14},{"ruleId":"94","severity":1,"message":"108","line":30,"column":10,"nodeType":"96","messageId":"97","endLine":30,"endColumn":13},{"ruleId":"94","severity":1,"message":"109","line":30,"column":15,"nodeType":"96","messageId":"97","endLine":30,"endColumn":21},{"ruleId":"94","severity":1,"message":"110","line":31,"column":10,"nodeType":"96","messageId":"97","endLine":31,"endColumn":16},{"ruleId":"102","severity":1,"message":"111","line":75,"column":6,"nodeType":"104","endLine":75,"endColumn":10,"suggestions":"112"},{"ruleId":"94","severity":1,"message":"113","line":77,"column":9,"nodeType":"96","messageId":"97","endLine":77,"endColumn":20},{"ruleId":"94","severity":1,"message":"114","line":94,"column":11,"nodeType":"96","messageId":"97","endLine":94,"endColumn":19},{"ruleId":"94","severity":1,"message":"115","line":15,"column":5,"nodeType":"96","messageId":"97","endLine":15,"endColumn":20},{"ruleId":"94","severity":1,"message":"116","line":34,"column":9,"nodeType":"96","messageId":"97","endLine":34,"endColumn":29},{"ruleId":"94","severity":1,"message":"117","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":15},{"ruleId":"94","severity":1,"message":"118","line":10,"column":10,"nodeType":"96","messageId":"97","endLine":10,"endColumn":18},{"ruleId":"94","severity":1,"message":"119","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"120","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":19},{"ruleId":"94","severity":1,"message":"99","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":15},{"ruleId":"94","severity":1,"message":"121","line":5,"column":17,"nodeType":"96","messageId":"97","endLine":5,"endColumn":21},{"ruleId":"94","severity":1,"message":"122","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":13},{"ruleId":"94","severity":1,"message":"123","line":7,"column":10,"nodeType":"96","messageId":"97","endLine":7,"endColumn":16},{"ruleId":"94","severity":1,"message":"124","line":8,"column":10,"nodeType":"96","messageId":"97","endLine":8,"endColumn":25},{"ruleId":"94","severity":1,"message":"125","line":9,"column":10,"nodeType":"96","messageId":"97","endLine":9,"endColumn":16},"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'Declaration' is defined but never used.","'Route' is defined but never used.","'conversationsData' is assigned a value but never used.","'newTimestamp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchConversation'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'darkmode' is defined but never used.","'Switch' is defined but never used.","'msg' is assigned a value but never used.","'setmsg' is assigned a value but never used.","'typing' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newChat'. Either include it or remove the dependency array.",["127"],"'handleClick' is assigned a value but never used.","'response' is assigned a value but never used.","'resetTranscript' is assigned a value but never used.","'handleLanguageChange' is assigned a value but never used.","'Sidebar' is defined but never used.","'loggedIn' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'format' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPlus' is defined but never used.",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [fetchConversation]",{"range":"132","text":"133"},"Update the dependencies array to be: [id, newChat]",{"range":"134","text":"135"},[1679,1681],"[fetchConversation]",[2688,2692],"[id, newChat]"]